trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformVersion: '1.3.7'  # versão do Terraform
  tfstateResourceGroup: 'RG02'
  tfstateStorageAccount: 'restorevmrg02'
  tfstateContainer: 'tfstate'
  tfstateKey: 'prod.tfstate'

stages:
- stage: Terraform
  jobs:
  - job: TerraformJob
    steps:

    # Instala Terraform
    - task: TerraformInstaller@1
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: '$(terraformVersion)'

    # Login no Azure usando o Service Connection
    - task: AzureCLI@2
      displayName: 'Azure Login'
      inputs:
        azureSubscription: 'SC-Terraform-Azure'  # <-- substitua aqui com o nome da sua conexão no DevOps
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "Login no Azure feito!"

    # Rodando Terraform Init
    - script: |
        terraform init \
          -backend-config="resource_group_name=$(tfstateResourceGroup)" \
          -backend-config="storage_account_name=$(tfstateStorageAccount)" \
          -backend-config="container_name=$(tfstateContainer)" \
          -backend-config="key=$(tfstateKey)"
      displayName: 'Terraform Init'

    # Rodando Terraform Plan
    - script: |
        terraform plan -out=tfplan
      displayName: 'Terraform Plan'

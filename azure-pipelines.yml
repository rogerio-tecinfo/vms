trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  tfstateResourceGroup: 'RG02'
  tfstateStorageAccount: 'restorevmrg02'
  tfstateContainer: 'tfstate'
  tfstateKey: 'prod.tfstate'
  azureSubscription: 'Terraform-automation'  # CASE-SENSITIVE!

jobs:
- job: Terraform
  displayName: 'Run Terraform'
  steps:

  # Step 1: Install Terraform
  - script: |
      echo "Installing Terraform..."
      curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
      sudo apt-add-repository "deb https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      sudo apt-get update
      sudo apt-get install terraform
    displayName: 'Install Terraform'

  # Step 2: Azure Login and ENV Setup (CRITICAL FIX)
  - task: AzureCLI@2
    displayName: 'Azure Login and Set ENV'
    inputs:
      azureSubscription: 'Terraform-automation'  # Must match EXACTLY
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az show account
        # Explicit service principal login
        # az login --service-principal \
        #   -u "$(servicePrincipalId)" \
        #   -p "$(servicePrincipalKey)" \
        #   --tenant "$(tenantId)"

        # # Set variables for Terraform
        # echo "##vso[task.setvariable variable=ARM_CLIENT_ID;issecret=true]$(servicePrincipalId)"
        # echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;issecret=true]$(servicePrincipalKey)"
        # echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$(subscriptionId)"
        # echo "##vso[task.setvariable variable=ARM_TENANT_ID]$(tenantId)"

  # Step 3: Terraform Init (with explicit auth)
  - script: |
      terraform init \
        -backend-config="resource_group_name=$(tfstateResourceGroup)" \
        -backend-config="storage_account_name=$(tfstateStorageAccount)" \
        -backend-config="container_name=$(tfstateContainer)" \
        -backend-config="key=$(tfstateKey)"
    env:
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      ARM_TENANT_ID: $(ARM_TENANT_ID)
    displayName: 'Terraform Init'

  # Step 4: Terraform Plan
  - script: |
      terraform plan -out=tfplan
    env:
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      ARM_TENANT_ID: $(ARM_TENANT_ID)
    dis

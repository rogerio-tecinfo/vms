trigger:
- main

variables:
  TF_VERSION: '1.3.7'
  WORKING_DIR: '$(System.DefaultWorkingDirectory)/vms'
  AZURE_SUBSCRIPTION: 'SC-Terraform-Azure' # Nome da sua Service Connection

pool:
  vmImage: 'ubuntu-latest'

steps:
# 1. Instalação manual do Terraform
- bash: |
    echo "Instalando Terraform $(TF_VERSION)..."
    wget https://releases.hashicorp.com/terraform/$(TF_VERSION)/terraform_$(TF_VERSION)_linux_amd64.zip
    unzip terraform_$(TF_VERSION)_linux_amd64.zip
    sudo install terraform /usr/local/bin/
    terraform -version
  displayName: 'Install Terraform'

# 2. Configura credenciais do Azure
- task: AzureCLI@2
  displayName: 'Azure Login'
  inputs:
    azureSubscription: '$(AZURE_SUBSCRIPTION)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "Configurando credenciais Terraform..."
      export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
      export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
      export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
      export ARM_TENANT_ID=$(ARM_TENANT_ID)

# 3. Comandos Terraform
- bash: |
    cd $(WORKING_DIR)
    echo "Inicializando Terraform..."
    terraform init \
      -backend-config="resource_group_name=RG02" \
      -backend-config="storage_account_name=seustorageaccount" \
      -backend-config="container_name=tfstate" \
      -backend-config="key=terraform.tfstate"
    
    echo "Executando Terraform Plan..."
    terraform plan -out=tfplan -var-file=terraform.tfvars
    
    echo "Aplicando mudanças..."
    terraform apply -auto-approve tfplan
  displayName: 'Run Terraform Commands'
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_TENANT_ID: $(ARM_TENANT_ID)

# 4. (Opcional) Validação pós-deploy
- bash: |
    cd $(WORKING_DIR)
    terraform output
  displayName: 'Show Outputs'
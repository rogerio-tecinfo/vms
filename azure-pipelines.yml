trigger:
- main

variables:
  TF_VERSION: '1.3.7'
  WORKING_DIR: '$(System.DefaultWorkingDirectory)/vms'

pool:
  vmImage: 'ubuntu-latest'

steps:

# 1. Instalar o Terraform
- bash: |
    echo "Instalando Terraform $(TF_VERSION)..."
    wget https://releases.hashicorp.com/terraform/$(TF_VERSION)/terraform_$(TF_VERSION)_linux_amd64.zip
    unzip terraform_$(TF_VERSION)_linux_amd64.zip
    sudo install terraform /usr/local/bin/
    terraform -version
  displayName: 'Install Terraform'

# 2. Terraform Init e Plan diretamente com variáveis ARM
- bash: |
    echo "Configurando variáveis de ambiente ARM..."
    export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
    export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
    export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
    export ARM_TENANT_ID=$(ARM_TENANT_ID)

    echo "Iniciando Terraform Init..."
    cd $(WORKING_DIR)

    terraform init -reconfigure \
      -backend-config="resource_group_name=RG02" \
      -backend-config="storage_account_name=restorevmrg02" \
      -backend-config="container_name=tfstate" \
      -backend-config="key=prod.tfstate"

    echo "Executando Terraform Plan..."
    terraform plan -out=tfplan -var-file=prod.tfvars
  displayName: 'Terraform Init and Plan'

# 3. Terraform Apply
- bash: |
    cd $(WORKING_DIR)
    terraform apply -auto-approve tfplan
  displayName: 'Terraform Apply'

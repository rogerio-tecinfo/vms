trigger:
- main

variables:
  terraformVersion: '1.3.7'
  workingDirectory: '$(System.DefaultWorkingDirectory)/VMS'  # Assumindo que seu código está numa subpasta 'terraform'

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: TerraformInstaller@0
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: '$(terraformVersion)'

steps:
- task: TerraformCLI@0
  displayName: 'Terraform Init'
  inputs:
    command: 'init'
    workingDirectory: '$(workingDirectory)'    

- task: TerraformCLI@0
  displayName: 'Terraform Init'
  inputs:
    command: 'init'
    workingDirectory: '$(workingDirectory)'
    backendType: 'azurerm'
    backendServiceArm: 'SC-Terraform-Azure'  # Nome da sua Service Connection no Azure DevOps
    backendAzureRmResourceGroupName: 'RG02'
    backendAzureRmStorageAccountName: 'restorevmrg02'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraform.tfstate'  # Nome do arquivo de estado

- task: TerraformCLI@0
  displayName: 'Terraform Validate'
  inputs:
    command: 'validate'
    workingDirectory: '$(workingDirectory)'

- task: TerraformCLI@0
  displayName: 'Terraform Plan'
  inputs:
    command: 'plan'
    workingDirectory: '$(workingDirectory)'
    commandOptions: '-out=tfplan -var-file=terraform.tfvars'
    environmentServiceName: 'Azure-Connection'

- task: TerraformCLI@0
  displayName: 'Terraform Apply'
  inputs:
    command: 'apply'
    workingDirectory: '$(workingDirectory)'
    commandOptions: 'tfplan'
    environmentServiceName: 'Azure-Connection'